@using FestivalVolunteer.Shared.Models;
@using FestivalVolunteer.Client.Services;
@inject Blazored.LocalStorage.ILocalStorageService localStore;

@page "/vagtoversigt"

<div class="text-center">
    <h1>Dine vagter</h1>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Dato</th>
            <th>Stilling</th>
            <th>Område</th>
            <th>Tidspunkt</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var vagt in vagtliste)
        {
        <tr>
            <td> @vagt.StartTime.ToString("dd-MM") </td>
            <td> @user.Name </td>
            <td> @vagt.Area </td>
            <td> @vagt.StartTime.ToString("HH:mm") - @vagt.EndTime.ToString("HH:mm") </td>
        </tr>
        }
    </tbody>
</table>

@code {
    [Inject]
    public IShiftService ShiftService { get; set; }

    [Inject]
    public IUserService UserService { get; set; }

    public User user = new User();
    public Shift shift = new Shift();
    public List<Shift> vagtliste = new List<Shift>();
    public Filter filter = new Filter();

    protected override async Task OnInitializedAsync()
    {
        vagtliste = (await ShiftService.GetFilteredShifts(filter)).ToList();
        user = await localStore.GetItemAsync<User>("user");
        filter.UserId = user.UserId.Value;
        filter.TeamId = user.TeamId.Value;
    }
}